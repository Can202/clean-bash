#!/bin/bash
version="v0.1"

if [ ! -z $1 ]
then
	if [ $1 = "-v" ] || [ $1 = "--version" ]
	then
		echo $version
		exit
	fi
fi

clear
if [ ! $(whoami) = "root" ]
then
    if [ -f "/usr/bin/dialog" ] || [ -f "/usr/sbin/dialog" ] || [ -f "/usr/games/dialog" ]
    then
        dialog --title "root" --msgbox "You need run this script as root" 0 0
    else
        echo "You need run this script as root"
    fi
    clear
    exit
fi

if [ -f "/usr/bin/dialog" ] || [ -f "/usr/sbin/dialog" ] || [ -f "/usr/games/dialog" ]
then
    echo
else
    echo "you don't have installed dialog"
    echo "Do you want to install dialog? (Y/n)"
    read install
    if [ $install = "y" ] || [ $install = "Y" ]
    then
        echo "installing"
        if [ -f "/usr/bin/zypper" ] || [ -f "/usr/sbin/zypper" ] || [ -f "/usr/games/zypper" ]
        then
            echo zypper detected
            zypper in dialog curl
        else
            if [ -f "/usr/bin/apt" ] || [ -f "/usr/sbin/apt" ] || [ -f "/usr/games/apt" ]
            then
                echo apt detected
                apt install dialog curl
            else
                if [ -f "/usr/bin/dnf" ] || [ -f "/usr/sbin/dnf" ] || [ -f "/usr/games/dnf" ]
                then
                    echo dnf detected
                    dnf install dialog curl
                else
                    if [ -f "/usr/bin/pacman" ] || [ -f "/usr/sbin/pacman" ] || [ -f "/usr/games/pacman" ]
                    then
                        echo pacman detected
                        pacman -S dialog curl
                    else
                        if [ -f "/usr/bin/eopkg" ] || [ -f "/usr/sbin/eopkg" ] || [ -f "/usr/games/eopkg" ]
                        then
                            echo eopkg detected
                            eopkg install dialog curl
                        else
                            echo "aborting"
                            exit
                        fi
                    fi
                fi
            fi
        fi
    else
        echo "aborting"
        exit
    fi
fi
last_version=$(curl https://raw.githubusercontent.com/Can202/tcs-cleaner/main/version)
dialog --title "Alert" --yesno "this script is a thorough cleaning, recommended: read very well, what the script is doing. Continue?" 0 0
if [ ! $? = 0 ]
then
    clear
    exit
fi

if [ ! $last_version = $version ]
then
	if [[ ! $last_version == *" "* ]]
	then
		dialog --title "New Update!!" --yesno "There is a new update of this script, you can install it, do you want to do?" 0 0
		if [ $? = 0 ]
		then
			clear
			curl https://raw.githubusercontent.com/Can202/tcs-cleaner/$last_version/installer | bash
			exit
		fi
	fi
fi


dialog --title "tmp" --yesno "Clean temps folder (thumbnails, tmp directory, etc)" 0 0
if [ $? = 0 ]
then
    rm -vfr /tmp/*
    rm -vfr /var/tmp/*
    rm -vfr ~/.cache/thumbnails/*
    rm -vfr ~/.thumbs/*
fi
dialog --title "trash" --yesno "Clean trash?" 0 0
if [ $? = 0 ]
then
    rm -vfr ~/.local/share/Trash/*
fi

#gestor de paquetes
if [ -f "/usr/bin/zypper" ] || [ -f "/usr/sbin/zypper" ] || [ -f "/usr/games/zypper" ]
then
    dialog --title "zypper" --yesno "Update from zypper?" 0 0
    if [ $? = 0 ]
    then
        clear
        zypper ref
        zypper up
        dialog --title "Alert" --yesno "If the update was to big, it's recommended restart, and then continue with the script. Yes = Continue, No = Exit" 0 0
        if [ ! $? = 0 ]
        then
            exit
        fi
    fi
    dialog --title "zypper" --yesno "remove unnecessary packages and clean chache from zypper?" 0 0
    if [ $? = 0 ]
    then
        clear
        zypper packages --unneeded | awk -F'|' 'NR==0 || NR==1 || NR==2 || NR==3 || NR==4 {next} {print $3}' | grep -v Name | sudo xargs zypper remove --clean-deps
        zypper cc
    fi
fi
if [ -f "/usr/bin/apt" ] || [ -f "/usr/sbin/apt" ] || [ -f "/usr/games/apt" ]
then
    dialog --title "apt" --yesno "Update from apt?" 0 0
    if [ $? = 0 ]
    then
        clear
        apt update
        apt upgrade
        dialog --title "Alert" --yesno "If the update was to big, it's recommended restart, and then continue with the script. Yes = Continue, No = Exit" 0 0
        if [ ! $? = 0 ]
        then
            exit
        fi
    fi
    dialog --title "apt" --yesno "remove unnecessary packages and clean chache from apt?" 0 0
    if [ $? = 0 ]
    then
        clear
        apt autoremove
        apt autoclean
        apt clean
    fi
fi
if [ -f "/usr/bin/dnf" ] || [ -f "/usr/sbin/dnf" ] || [ -f "/usr/games/dnf" ]
then
    dialog --title "dnf" --yesno "Update from dnf?" 0 0
    if [ $? = 0 ]
    then
        clear
        dnf upgrade --refresh
        dialog --title "Alert" --yesno "If the update was to big, it's recommended restart, and then continue with the script. Yes = Continue, No = Exit" 0 0
        if [ ! $? = 0 ]
        then
            exit
        fi
    fi
    dialog --title "dnf" --yesno "remove unnecessary packages and clean chache from dnf?" 0 0
    if [ $? = 0 ]
    then
        clear
        dnf autoremove
        dnf clean all
    fi
fi
if [ -f "/usr/bin/pacman" ] || [ -f "/usr/sbin/pacman" ] || [ -f "/usr/games/pacman" ]
then
    dialog --title "pacman" --yesno "Update from pacman?" 0 0
    if [ $? = 0 ]
    then
        clear
        pacman -Syu
        dialog --title "Alert" --yesno "If the update was to big, it's recommended restart, and then continue with the script. Yes = Continue, No = Exit" 0 0
        if [ ! $? = 0 ]
        then
            exit
        fi
    fi
    dialog --title "pacman" --yesno "remove unnecessary packages and clean chache from pacman?" 0 0
    if [ $? = 0 ]
    then
        clear
        pacman -Rs $(pacman -Qtdq)
        pacman -Sc
    fi
fi
if [ -f "/usr/bin/eopkg" ] || [ -f "/usr/sbin/eopkg" ] || [ -f "/usr/games/eopkg" ]
then
    dialog --title "eopkg" --yesno "Update from eopkg?" 0 0
    if [ $? = 0 ]
    then
        clear
        eopkg upgrade
        dialog --title "Alert" --yesno "If the update was to big, it's recommended restart, and then continue with the script. Yes = Continue, No = Exit" 0 0
        if [ ! $? = 0 ]
        then
            exit
        fi
    fi
    dialog --title "eopkg" --yesno "clean cache from eopkg?" 0 0
    if [ $? = 0 ]
    then
        clear
        eopkg delete-cache
    fi
fi



if [ -f "/usr/bin/snap" ] || [ -f "/usr/sbin/snap" ] || [ -f "/usr/games/snap" ]
then
    dialog --title "snap" --yesno "Update snap?" 0 0
    if [ $? = 0 ]
    then
        clear
        snap refresh
    fi
fi
if [ -f "/usr/bin/flatpak" ] || [ -f "/usr/sbin/flatpak" ] || [ -f "/usr/games/flatpak" ]
then
    dialog --title "flatpak" --yesno "Update flatpak?" 0 0
    if [ $? = 0 ]
    then
        clear
        flatpak update
    fi
fi
dialog --title "thank you" --msgbox "thank you to use my script, you can share it with your friends. if you think that they need it. Bye!" 0 0

clear
